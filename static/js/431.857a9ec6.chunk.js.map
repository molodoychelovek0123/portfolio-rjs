{"version":3,"file":"static/js/431.857a9ec6.chunk.js","mappings":"yPAMMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAOU,OAPVA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAOJC,YAAc,CAAC,eAAgB,QAAjB,EA4Bb,OA5Ba,kCACd,WAEE,OADqBC,KAAKC,MAAnBC,WAEEF,KAAKD,YAAYI,OAAO,CAAC,WAEzBH,KAAKD,cAEf,oBAED,WACI,OACA,SAAC,WAAD,WACI,eAAIK,UAAWJ,KAAKK,aAAaC,KAAK,KAAtC,UACE,eAAGC,KAAMP,KAAKC,MAAMO,IAApB,WACE,gBAAKJ,UAAU,gBAAf,UACE,gBAAKA,UAAU,aAAf,UACE,wBAAKJ,KAAKC,MAAMQ,YAIpB,gBAAKL,UAAU,cAAf,UACE,gBAAKM,IAAKV,KAAKC,MAAMU,MAAOC,IAAKZ,KAAKC,MAAMQ,KAAML,UAAU,gCAMzE,EAnCGN,CAAyBe,EAAAA,WAwC/B,GAFoBC,EAAAA,EAAAA,IAAehB,GCtCdiB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAIjB,WAAYd,GAAQ,IAAD,yBACf,cAAMA,IAJVe,SAAW,GAGQ,EAFnBC,MAAQ,CAACC,QAAQ,GAIb,EAAKD,MAAM,CAACC,QAAQ,GAFL,EAoClB,OAhCA,yCACD,WAAqB,IAAD,OACZlB,KAAKiB,MAAMC,QACfC,MAAM,iBAAiBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAS,EAAKP,SAAWO,EAAK,EAAKC,SAAS,CAACN,QAAQ,SACtH,gCACD,WAAsB,IAAD,OACblB,KAAKiB,MAAMC,QACfC,MAAM,iBAAiBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAS,EAAKP,SAAWO,EAAK,EAAKC,SAAS,CAACN,QAAQ,SACtH,oBACD,WACI,OACI,oBAASd,UAAU,WAAWqB,GAAG,WAAjC,UACI,iBAAKrB,UAAU,YAAf,WACI,0BAAKsB,EAAAA,EAAAA,KAAL,iBACC1B,KAAKiB,MAAMC,QAEJ,eAAId,UAAU,mBAAd,SACKJ,KAAKgB,SAASW,KAAI,SAACC,EAASC,GACzB,OAAO,SAAC,EAAD,CAAapB,KAAMmB,EAAQnB,KAAMD,IAAKoB,EAAQpB,IAAKG,MAAOiB,EAAQjB,OAChDkB,SAMjC,mDAOvB,EAxCgBd,CAAiBF,EAAAA","sources":["components/Projects/ProjectItem.js","components/Projects/Projects.js"],"sourcesContent":["// Карточка проекта\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport handleViewport from 'react-in-viewport';\n\nclass ProjectItemBlock extends React.Component {\n\n  static propTypes = {\n    name: PropTypes.string,\n    url: PropTypes.string,\n    image: PropTypes.string.isRequired,\n  };\n  baseClasses = ['project-item', 'card']\n  getClasses() {\n    const {inViewport} = this.props;\n    if (inViewport) {\n      return this.baseClasses.concat(['active']);\n    } else {\n      return this.baseClasses;\n    }\n  }\n\n  render() {\n      return (\n      <React.Fragment>\n          <li className={this.getClasses().join(\" \")}>\n            <a href={this.props.url}>\n              <div className=\"card__overlay\">\n                <div className=\"card__text\">\n                  <h4>{this.props.name}</h4>\n                </div>\n              </div>\n\n              <div className=\"card__image\">\n                <img src={this.props.image} alt={this.props.name} className=\"responsive-img\" />\n              </div>\n            </a>\n          </li>\n      </React.Fragment>\n    );\n  }\n}\n\nconst ProjectItem = handleViewport(ProjectItemBlock)\n\nexport default ProjectItem;","// Блок проекты\n\nimport React from 'react'\nimport config from \"../../AppConfig\";\nimport ProjectItem from \"./ProjectItem\";\n\nexport default class Projects extends React.Component {\n    projects = [];\n    state = {loaded: false}\n\n    constructor(props) {\n        super(props);\n        this.state={loaded: false}\n\n    }\n    componentDidMount() {\n        if(!this.state.loaded)\n        fetch('projects.json').then(response => response.json()).then(data => {this.projects = data;this.setState({loaded: true})});\n    }\n    componentDidUpdate() {\n        if(!this.state.loaded)\n        fetch('projects.json').then(response => response.json()).then(data => {this.projects = data;this.setState({loaded: true})});\n    }\n    render() {\n        return (\n            <section className=\"projects\" id=\"projects\">\n                <div className=\"container\">\n                    <h3>{config.name} / projects</h3>\n                    {this.state.loaded ?\n                        (\n                            <ul className=\"projects-wrapper\">\n                                {this.projects.map((project, index) => {\n                                    return <ProjectItem name={project.name} url={project.url} image={project.image}\n                                                        key={index}/>\n                                })}\n                            </ul>\n                        )\n                        :\n                        (\n                            <div> Loading... </div>\n                        )\n                    }\n\n                </div>\n            </section>\n        )\n    }\n}"],"names":["ProjectItemBlock","baseClasses","this","props","inViewport","concat","className","getClasses","join","href","url","name","src","image","alt","React","handleViewport","Projects","projects","state","loaded","fetch","then","response","json","data","setState","id","config","map","project","index"],"sourceRoot":""}