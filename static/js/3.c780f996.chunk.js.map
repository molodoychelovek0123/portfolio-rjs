{"version":3,"sources":["components/Projects/ProjectItem.js","components/Projects/Projects.js"],"names":["ProjectItemBlock","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","baseClasses","_createClass","key","value","this","props","inViewport","_jsx","React","Fragment","children","className","getClasses","join","_jsxs","href","url","name","src","image","alt","Component","ProjectItem","handleViewport","Projects","projects","state","loaded","_this2","fetch","then","response","json","data","setState","_this3","id","config","map","project","index"],"mappings":"yPAMMA,EAAgB,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAOkB,OAPlBP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KAOpBM,YAAc,CAAC,eAAgB,QAAOX,CAAA,CA4BrC,OA5BqCY,YAAAjB,EAAA,EAAAkB,IAAA,aAAAC,MACtC,WAEE,OADqBC,KAAKC,MAAnBC,WAEEF,KAAKJ,YAAYD,OAAO,CAAC,WAEzBK,KAAKJ,WAEhB,GAAC,CAAAE,IAAA,SAAAC,MAED,WACI,OACAI,cAACC,IAAMC,SAAQ,CAAAC,SACXH,cAAA,MAAII,UAAWP,KAAKQ,aAAaC,KAAK,KAAKH,SACzCI,eAAA,KAAGC,KAAMX,KAAKC,MAAMW,IAAIN,SAAA,CACtBH,cAAA,OAAKI,UAAU,gBAAeD,SAC5BH,cAAA,OAAKI,UAAU,aAAYD,SACzBH,cAAA,MAAAG,SAAKN,KAAKC,MAAMY,WAIpBV,cAAA,OAAKI,UAAU,cAAaD,SAC1BH,cAAA,OAAKW,IAAKd,KAAKC,MAAMc,MAAOC,IAAKhB,KAAKC,MAAMY,KAAMN,UAAU,2BAM1E,KAAC3B,CAAA,CAnCmB,CAASwB,IAAMa,WAwCtBC,EAFKC,IAAevC,GCtCdwC,EAAQ,SAAAvC,GAAAC,YAAAsC,EAAAvC,GAAA,IAAAE,EAAAC,YAAAoC,GAIzB,SAAAA,EAAYnB,GAAQ,IAADhB,EAEY,OAFZC,YAAA,KAAAkC,IACfnC,EAAAF,EAAAU,KAAA,KAAMQ,IAJVoB,SAAW,GAAEpC,EACbqC,MAAQ,CAACC,QAAQ,GAIbtC,EAAKqC,MAAM,CAACC,QAAQ,GAAOtC,CAE/B,CAgCC,OAhCAY,YAAAuB,EAAA,EAAAtB,IAAA,oBAAAC,MACD,WAAqB,IAADyB,EAAA,KACZxB,KAAKsB,MAAMC,QACfE,MAAM,iBAAiBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAAEF,MAAK,SAAAG,GAASL,EAAKH,SAAWQ,EAAKL,EAAKM,SAAS,CAACP,QAAQ,GAAM,GAC7H,GAAC,CAAAzB,IAAA,qBAAAC,MACD,WAAsB,IAADgC,EAAA,KACb/B,KAAKsB,MAAMC,QACfE,MAAM,iBAAiBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAAEF,MAAK,SAAAG,GAASE,EAAKV,SAAWQ,EAAKE,EAAKD,SAAS,CAACP,QAAQ,GAAM,GAC7H,GAAC,CAAAzB,IAAA,SAAAC,MACD,WACI,OACII,cAAA,WAASI,UAAU,WAAWyB,GAAG,WAAU1B,SACvCI,eAAA,OAAKH,UAAU,YAAWD,SAAA,CACtBI,eAAA,MAAAJ,SAAA,CAAK2B,IAAOpB,KAAK,iBAChBb,KAAKsB,MAAMC,OAEJpB,cAAA,MAAII,UAAU,mBAAkBD,SAC3BN,KAAKqB,SAASa,KAAI,SAACC,EAASC,GACzB,OAAOjC,cAACe,EAAW,CAACL,KAAMsB,EAAQtB,KAAMD,IAAKuB,EAAQvB,IAAKG,MAAOoB,EAAQpB,OAChDqB,EAC7B,MAKJjC,cAAA,OAAAG,SAAK,qBAO7B,KAACc,CAAA,CAxCwB,CAAShB,IAAMa,U","file":"static/js/3.c780f996.chunk.js","sourcesContent":["// Карточка проекта\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport handleViewport from 'react-in-viewport';\n\nclass ProjectItemBlock extends React.Component {\n\n  static propTypes = {\n    name: PropTypes.string,\n    url: PropTypes.string,\n    image: PropTypes.string.isRequired,\n  };\n  baseClasses = ['project-item', 'card']\n  getClasses() {\n    const {inViewport} = this.props;\n    if (inViewport) { // Если проект во вью порте\n      return this.baseClasses.concat(['active']);\n    } else {\n      return this.baseClasses;\n    }\n  }\n\n  render() {\n      return (\n      <React.Fragment>\n          <li className={this.getClasses().join(\" \")}>\n            <a href={this.props.url}>\n              <div className=\"card__overlay\">\n                <div className=\"card__text\">\n                  <h4>{this.props.name}</h4>\n                </div>\n              </div>\n\n              <div className=\"card__image\">\n                <img src={this.props.image} alt={this.props.name} className=\"responsive-img\" />\n              </div>\n            </a>\n          </li>\n      </React.Fragment>\n    );\n  }\n}\n\nconst ProjectItem = handleViewport(ProjectItemBlock)\n\nexport default ProjectItem;","// Блок проекты\n\nimport React from 'react'\nimport config from \"../../AppConfig\";\nimport ProjectItem from \"./ProjectItem\";\n\nexport default class Projects extends React.Component {\n    projects = [];\n    state = {loaded: false}\n\n    constructor(props) {\n        super(props);\n        this.state={loaded: false} // По стандарту состояния лоадеда не загружено\n\n    }\n    componentDidMount() { // Вызов функции после монтирования в DOM\n        if(!this.state.loaded) // Проверка загружены ли проекты, чтобы не загружать их постоянно\n        fetch('projects.json').then(response => response.json()).then(data => {this.projects = data;this.setState({loaded: true})}); // Загружаем и выставляем другое состояние лоадеда\n    }\n    componentDidUpdate() { // Вызов функции после обновления компонента\n        if(!this.state.loaded) // Проверка загружены ли проекты, чтобы не загружать их постоянно\n        fetch('projects.json').then(response => response.json()).then(data => {this.projects = data;this.setState({loaded: true})}); // Загружаем и выставляем другое состояние лоадеда\n    }\n    render() {\n        return (\n            <section className=\"projects\" id=\"projects\">\n                <div className=\"container\">\n                    <h3>{config.name} / projects</h3>\n                    {this.state.loaded ? // Если мы грузанули проекты\n                        (\n                            <ul className=\"projects-wrapper\">\n                                {this.projects.map((project, index) => {\n                                    return <ProjectItem name={project.name} url={project.url} image={project.image}\n                                                        key={index}/>\n                                })}\n                            </ul>\n                        )\n                        :\n                        (\n                            <div> Loading... </div>\n                        )\n                    }\n\n                </div>\n            </section>\n        )\n    }\n}"],"sourceRoot":""}